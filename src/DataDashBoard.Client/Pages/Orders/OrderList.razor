@page "/orders"

@inject IOrderRepository _repo

<h3>Order(s) List</h3>

<div>
    <button @onclick="ResetToFirstPage"><span class="oi oi-action-undo"></span>First Page</button>
    @if (PageNumber > 1)
    {
        <button @onclick="Previous"><span class="oi oi-media-step-backward"></span>Previous</button>
    }
    <button @onclick="Next"><span class="oi oi-media-step-forward"></span>Next Page</button>
    <button @onclick="GoToLastPage"><span class="oi oi-action-redo"></span>Last Page</button>
</div>

@if (Orders == null)
{
    <p>Loading...</p>
}
else
{
    <table class="table table-striped table-responsive-xl">
        <thead class="thead-dark">
            <tr>
                <th>Date Placed</th>
                <th>Date Completed</th>
                <th>Total Amount</th>
                <th>Customer</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in Orders)
            {
            <tr>
                <td>@order.Placed</td>
                <td>@order.Completed</td>
                <td>@order.Total</td>
                <td>
                    @if (order.Customer == null)
                    {
                        <span>no customer recorded</span>
                    }
                    else
                    {
                        @order.Customer.Name
                    }
                </td>
                <td>
                    <a href="/orders/details/@order.Id" class="btn btn-primary">
                        Details
                    </a>
                </td>
            </tr> 
            }
        </tbody>
    </table>

    <div>
        <button @onclick="ResetToFirstPage"><span class="oi oi-action-redo"></span>First Page</button>
        @if (PageNumber > 1)
        {
            <button @onclick="Previous"><span class="oi oi-media-step-backward"></span>Previous</button>
        }
        <button @onclick="Next"><span class="oi oi-media-step-forward"></span>Next Page</button>
        <button @onclick="GoToLastPage"><span class="oi oi-action-undo"></span>Last Page</button>
    </div>

}

@code {
    private IList<OrderModel> Orders;

    int PageNumber = 1;
    int PageSize = 20;

    protected override async Task OnInitializedAsync()
    {
        Orders = await _repo.GetAll(Endpoints.OrdersEndpoint);
    }

    private async Task Next()
    {
        PageNumber++;
        var response = await _repo.GetAll(Endpoints.OrdersEndpoint + $"?page={PageNumber}&pageSize={PageSize}");
        Orders = response;
    }

    private async Task Previous()
    {
        PageNumber--;
        var response = await _repo.GetAll(Endpoints.OrdersEndpoint + $"?page={PageNumber}&pageSize={PageSize}");
        Orders = response;
    }

    private async Task ResetToFirstPage()
    {
        PageNumber = 1;
        var response = await _repo.GetAll(Endpoints.OrdersEndpoint + $"?page={PageNumber}&pageSize={PageSize}");
        Orders = response;
        StateHasChanged();
    }

    private async Task GoToLastPage()
    {
        PageNumber = 100;
        var response = await _repo.GetAll(Endpoints.OrdersEndpoint + $"?page={PageNumber}&pageSize={PageSize}");
        Orders = response;
        StateHasChanged();
    }

}